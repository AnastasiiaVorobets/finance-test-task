{"version":3,"sources":["components/Header/Header.jsx","components/Menu/Menu.jsx","components/Tickers/Tickers.jsx","components/TickerList/TickerList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","className","Menu","Tickers","tickers","ticker","price","change","change_percent","useState","prevPrice","setPrevPrice","useEffect","prev","priceReduction","TickersList","map","socket","socketIO","connect","App","setTickers","emit","on","response","close","TickerList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAQeA,MANf,WACE,OACE,oBAAIC,UAAU,QAAd,uD,MCQWC,MAVf,WACE,OACE,qBAAID,UAAU,OAAd,UACE,oBAAIA,UAAU,aAAd,qBACA,oBAAIA,UAAU,gCAAd,8BACA,oBAAIA,UAAU,aAAd,4B,MC+BSE,MAnCf,YAA+B,IAAZC,EAAW,EAAXA,QAEfC,EAIED,EAJFC,OACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,OACAC,EACEJ,EADFI,eAGF,EAAkCC,mBAASH,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACRD,GAAa,SAAAE,GACX,OAAIA,IAASP,EACJO,EAEAP,OAGV,CAACA,IAEJ,IAAMQ,EAAiBR,EAAQI,EAE/B,OACE,sBAAKT,UAAS,uBAAkBa,EAAiB,YAAc,eAA/D,UACE,6BAAKT,IACL,wCAAWC,KAEX,sBAAKL,UAAU,iBAAf,UACE,yCAAYa,EAAiB,IAAM,IAAnC,IAAyCP,KACzC,8BAAIO,EAAiB,IAAM,IAA3B,IAAiCN,EAAjC,gBCpBOO,MAVf,YAAuC,IAAD,IAAhBX,eAAgB,MAAN,GAAM,EACpC,OACE,8BACGA,EAAQY,KAAI,SAACX,GAAD,OACX,cAAC,EAAD,CAASD,QAASC,GAAaA,EAAOA,cCCxCY,G,MAASC,IAASC,QAAQ,0BAuBjBC,MArBf,WACE,MAA8BX,mBAAS,IAAvC,mBAAOL,EAAP,KAAgBiB,EAAhB,KAWA,OATAT,qBAAU,WAIR,OAHAK,EAAOK,KAAK,SACZL,EAAOM,GAAG,UAAU,SAACC,GAAD,OAAcH,EAAWG,MAEtC,WACLP,EAAOQ,WAER,IAGD,sBAAKxB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACyB,EAAD,CAAYtB,QAASA,QCbZuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c846933d.chunk.js","sourcesContent":["import './header.css';\n\nfunction Header() {\n  return (\n    <h1 className=\"title\">Price tickers data on the UI in realtime</h1>\n  )\n}\n\nexport default Header;\n","import './menu.css';\n\nfunction Menu () {\n  return (\n    <ul className=\"menu\">\n      <li className=\"menu__list\">Futures</li>\n      <li className=\"menu__list menu__list--crypto\">Cryptocurrencies</li>\n      <li className=\"menu__list\">Currencies</li>\n    </ul>\n  )\n}\n\nexport default Menu;","import React, { useState, useEffect } from 'react';\nimport './tickers.css';\n\nfunction Tickers({ tickers }) {\n  const {\n    ticker,\n    price,\n    change,\n    change_percent,\n  } = tickers;\n  \n  const [prevPrice, setPrevPrice] = useState(price);\n\n  useEffect(() => {\n    setPrevPrice(prev => {\n      if (prev !== price) {\n        return prev;\n      } else {\n        return price;\n      }\n    });\n  }, [price]);\n\n  const priceReduction = price < prevPrice;\n\n  return (\n    <div className={`ticker_block ${priceReduction ? 'red_color' : 'green_color'}`}>\n      <h1>{ticker}</h1>\n      <p>Price: {price}</p>\n       \n      <div className='ticker__change'>\n        <p>Change: {priceReduction ? '-' : '+'} {change}</p>\n        <p>{priceReduction ? '-' : '+'} {change_percent} % </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Tickers;\n","import Tickers from \"../Tickers/Tickers\";\n\nfunction TickersList({tickers = [] }) {\n  return (\n    <div>\n      {tickers.map((ticker) => (\n        <Tickers tickers={ticker} key={ticker.ticker}/>\n      ))}\n    </div>\n  );\n}\n\nexport default TickersList;\n","import React, { useEffect, useState } from 'react';\nimport socketIO from 'socket.io-client';\nimport Header from './components/Header/Header';\nimport Menu from './components/Menu/Menu';\nimport TickerList from \"./components/TickerList/TickerList\";\nimport './App.css';\n\nconst socket = socketIO.connect('http://localhost:4000');\n\nfunction App() {\n  const [tickers, setTickers] = useState([]);\n\n  useEffect(() => {\n    socket.emit('start');\n    socket.on('ticker', (response) => setTickers(response));\n\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Menu />\n      <TickerList tickers={tickers} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}